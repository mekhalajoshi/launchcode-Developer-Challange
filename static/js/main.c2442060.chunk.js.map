{"version":3,"sources":["api/apiUtils.js","initialData.js","api/dataAPIUtil.js","redux/actions/quoteActions.js","redux/actions/actionTypes.js","components/QuotesForm.jsx","components/QuoteDetailsModal.jsx","components/QuoteList.jsx","components/Dashboard.jsx","redux/reducers/quotesReducer.js","redux/reducers/index.js","App.jsx","redux/store/configureStore.js","serviceWorker.js","index.js"],"names":["handleResponse","response","a","console","log","status","data","text","error","Error","handleError","quoteItems","id","name","destination","price","quoteDetails","isLoading","quoteId","url","axios","get","then","catch","payload","post","JSON","stringify","getQuoteList","dispatch","dataApi","type","getQuoteListSuccess","getQuoteDetails","getQuoteDetailsSuccess","postQuoteApi","useStyles","makeStyles","theme","root","width","typography","marginLeft","spacing","color","form","margin","QuotesForm","classes","useState","from","setFrom","setDestination","departureDate","setDepartureDate","returnDate","setReturnDate","people","setPeople","transportation","setTransportation","setName","handleInputChange","e","target","value","useDispatch","Paper","className","Typography","Divider","autoComplete","TextField","label","variant","InputLabelProps","shrink","onChange","Button","onClick","nanoid","departDate","quoteActions","DialogTitle","withStyles","padding","closeButton","position","right","top","palette","grey","tablecell","fontSize","props","children","onClose","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","QuoteDetailsModal","open","Dialog","aria-labelledby","dividers","gutterBottom","quote_id","phone","address","email","depatrute_location","destination_location","departure_date","return_date","number_of_travellers","table","QuoteList","setOpen","useEffect","useSelector","state","quotes","TableContainer","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","hover","key","scope","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Dashboard","AppBar","Toolbar","src","alt","InputBase","placeholder","input","inputProps","quotesReducer","action","rootReducer","combineReducers","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qbAAO,SAAeA,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAC,EAAA,yDACLC,QAAQC,IAAI,kCACY,MAApBH,EAASI,OAFR,yCAIIJ,EAASK,MAJb,UAMmB,MAApBL,EAASI,OANR,gCASiBJ,EAASM,OAT1B,aASGC,EATH,OAUG,IAAIC,MAAMD,GAVb,aAYC,IAAIC,MAAM,gCAZX,4C,sBAgBA,SAASC,EAAYF,GAG1B,MADAL,QAAQK,MAAR,2BAAkCA,IAC5BA,ECnBR,IA8DeF,EA9DF,CACXK,WAAY,CACV,CACEC,GAAI,SACJC,KAAM,QACNC,YAAa,WACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,MACNC,YAAa,WACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,MACNC,YAAa,WACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,eACNC,YAAa,SACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,eACNC,YAAa,SACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,eACNC,YAAa,SACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,cACNC,YAAa,QACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,kBACNC,YAAa,UACbC,MAAO,QAET,CACEH,GAAI,SACJC,KAAM,kBACNC,YAAa,UACbC,MAAO,SAGXC,aAAc,GAGdC,WAAW,G,4CCvDN,sBAAAf,EAAA,+EAUEI,GAVF,4C,kEAaA,WAA0BY,GAA1B,eAAAhB,EAAA,6DACLC,QAAQC,IAAI,oCACI,oEACVe,EAHD,UAEW,oEAFX,YAGqBD,GAHrB,kBAKEE,IAAMC,IAAIF,GACdG,KAAKtB,GACLuB,MAAMb,IAPJ,4C,kEAYA,WAAuBc,GAAvB,eAAAtB,EAAA,6DACLC,QAAQC,IAAI,qCACI,oEACVe,EAHD,UAEW,oEAFX,uBAKEC,IAAMK,KAAKN,EAAKO,KAAKC,UAAUH,IACnCF,KAAKtB,GACLuB,MAAMb,IAPJ,4C,sBCNA,SAASkB,IACd,OAAO,SAAUC,GACf,ODrBG,WAAP,+BCqBWC,GAAkBR,MAAK,SAAChB,GAC7BuB,EAnBC,SAA6BvB,GAClC,MAAO,CAAEyB,KCN2B,yBDMSzB,QAkBhC0B,CAAoB1B,OAC5BiB,OAAM,SAACf,GAER,MAAMA,MAKL,SAASyB,EAAgBf,GAC9B,OAAO,SAAUW,GAEf,OADAA,EAzBK,CAAEE,KCPsB,sBFa1B,SAAP,kCCoBWD,CAAmBZ,GAASI,MAAK,SAAChB,GACvCuB,EAzBC,SAAgCvB,GACrC,MAAO,CAAEyB,KCT8B,4BDSSzB,QAwBnC4B,CAAuB5B,OAC/BiB,OAAM,SAACf,GAER,MAAMA,MAKL,SAAS2B,EAAaX,GAC3B,OAAO,SAAUK,GACf,ODnBG,SAAP,kCCmBWC,CAAgBN,GAASF,MAAK,WACnCO,EAASD,QACRL,OAAM,SAACf,GAER,MAAMA,MExCZ,IAAM4B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,SAETC,WAAY,CACVC,WAAYJ,EAAMK,QAAQ,GAC1BC,MAAO,WAETC,KAAM,CACJ,uBAAwB,CACtBC,OAAQR,EAAMK,QAAQ,GACtBH,MAAO,aAyJEO,EArJI,WACjB,IAAMC,EAAUZ,IADO,EAECa,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,OAGeF,mBAAS,IAHxB,mBAGhBnC,EAHgB,KAGHsC,EAHG,OAImBH,mBAAS,IAJ5B,mBAIhBI,EAJgB,KAIDC,EAJC,OAKaL,mBAAS,IALtB,mBAKhBM,EALgB,KAKJC,EALI,OAMKP,mBAAS,IANd,mBAMhBQ,EANgB,KAMRC,EANQ,OAOqBT,mBAAS,IAP9B,mBAOhBU,EAPgB,KAOAC,EAPA,OAQCX,mBAAS,IARV,mBAQhBpC,EARgB,KAQVgD,EARU,KAUjBC,EAAoB,SAACC,GACzB,OAAQA,EAAEC,OAAOpD,IACf,IAAK,OACHuC,EAAQY,EAAEC,OAAOC,OACjB,MACF,IAAK,cACHb,EAAeW,EAAEC,OAAOC,OACxB,MACF,IAAK,gBACHX,EAAiBS,EAAEC,OAAOC,OAC1B,MACF,IAAK,aACHT,EAAcO,EAAEC,OAAOC,OACvB,MACF,IAAK,SACHP,EAAUK,EAAEC,OAAOC,OACnB,MACF,IAAK,iBACHL,EAAkBG,EAAEC,OAAOC,OAC3B,MACF,IAAK,OACHJ,EAAQE,EAAEC,OAAOC,SAOjBpC,EAAWqC,cAgBjB,OAEE,kBAACC,EAAA,EAAD,CAAOC,UAAWpB,EAAQT,MACxB,yBAAK6B,UAAU,uBACb,kBAAC,IAAD,CAAyBxB,MAAM,YAC/B,kBAACyB,EAAA,EAAD,CAAYD,UAAWpB,EAAQP,YAA/B,eACA,yBAAK2B,UAAU,6BAA4B,kBAAC,IAAD,CAAoBxB,MAAM,cAEvE,kBAAC0B,EAAA,EAAD,MACA,0BAAMF,UAAWpB,EAAQH,KAAM0B,aAAa,OAC1C,kBAACC,EAAA,EAAD,CACE5D,GAAG,OACH6D,MAAM,OACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOf,EACP2B,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,cACH6D,MAAM,cACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOnD,EACP+D,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,gBACH6D,MAAM,iBACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOZ,EACPwB,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,aACH6D,MAAM,cACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOV,EACPsB,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,SACH6D,MAAM,SACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOR,EACPoB,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,iBACH6D,MAAM,iBACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAON,EACPkB,SAAUf,IAEZ,kBAACU,EAAA,EAAD,CACE5D,GAAG,OACH6D,MAAM,OACN1C,KAAK,OACL2C,QAAQ,SACRC,gBAAiB,CACfC,QAAQ,GAEVX,MAAOpD,EACPgE,SAAUf,IAEZ,kBAACgB,EAAA,EAAD,CAAQC,QAtGW,WAEvB,IAAMvD,EAAU,CACdN,QAAS8D,YAAO,GAChB9B,OACApC,cACAmE,WAAY5B,EACZE,aACAE,SACAE,iBACA9C,QAEFgB,EAASqD,EAA0B1D,MA0F/B,qB,oJC9IF2D,GAAcC,cAhBL,SAAC9C,GAAD,MAAY,CACzBC,KAAM,CACJO,OAAQ,EACRuC,QAAS/C,EAAMK,QAAQ,IAEzB2C,YAAa,CACXC,SAAU,WACVC,MAAOlD,EAAMK,QAAQ,GACrB8C,IAAKnD,EAAMK,QAAQ,GACnBC,MAAON,EAAMoD,QAAQC,KAAK,MAE5BC,UAAW,CACTC,SAAU,WAIMT,EAAmB,SAACU,GAAW,IAE/CC,EACED,EADFC,SAAU/C,EACR8C,EADQ9C,QAASgD,EACjBF,EADiBE,QAAYC,EAFe,aAG5CH,EAH4C,kCAKhD,OACE,kBAAC,KAAD,eAAgBI,mBAAiB,EAAC9B,UAAWpB,EAAQT,MAAU0D,GAC7D,kBAAC5B,EAAA,EAAD,CAAYK,QAAQ,MAAMqB,GACzBC,EACC,kBAACG,GAAA,EAAD,CAAYC,aAAW,QAAQhC,UAAWpB,EAAQsC,YAAaP,QAASiB,GACtE,kBAAC,KAAD,OAEA,SAIJK,GAAgBjB,cAAW,SAAC9C,GAAD,MAAY,CAC3CC,KAAM,CACJ8C,QAAS/C,EAAMK,QAAQ,OAFLyC,CAIlBkB,MAyEWC,GAvEW,SAACT,GAAW,IAElCE,EACEF,EADFE,QAASQ,EACPV,EADOU,KAAMxF,EACb8E,EADa9E,aAGjB,OAEE,kBAACyF,GAAA,EAAD,CAAQT,QAASA,EAASU,kBAAgB,0BAA0BF,KAAMA,GACxE,kBAAC,GAAD,CAAa5F,GAAG,0BAA0BoF,QAASA,GAAnD,iBAGA,kBAAC,GAAD,CAAeW,UAAQ,GAErB,kBAACtC,EAAA,EAAD,CAAYuC,cAAY,GAAxB,WAEG,IACA5F,EAAa6F,SACd,6BAJF,QAMG,IACA7F,EAAaH,KACd,6BARF,gBAUG,IACAG,EAAa8F,MACd,6BAZF,WAcG,IACA9F,EAAa+F,QACd,6BAhBF,SAkBG,IACA/F,EAAagG,MACd,6BApBF,iBAsBG,IACAhG,EAAa2C,eACd,6BAxBF,sBA0BG,IACA,IACA3C,EAAaiG,mBACd,6BA7BF,wBA+BG,IACA,IACAjG,EAAakG,qBACd,6BAlCF,kBAoCG,IACAlG,EAAamG,eACd,6BAtCF,cAwCG,IACAnG,EAAaoG,YACd,6BA1CF,wBA4CG,IACApG,EAAaqG,qBACd,6BA9CF,SAgDG,IACArG,EAAaD,MACd,iCC7FJqB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCgF,MAAO,CACL9E,MAAO,SAGTC,WAAY,CACVC,WAAYJ,EAAMK,QAAQ,GAC1BC,MAAO,eAuFI2E,GAnFG,WAAO,IAAD,EACEtE,oBAAS,GADX,mBACfuD,EADe,KACTgB,EADS,KAEhB3F,EAAWqC,cACXlB,EAAUZ,KAWhBqF,qBAAU,WACR5F,EAASqD,OACR,IAEH,IAAM5E,EAAOoH,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAG1C,OACE,6BAEE,kBAACC,EAAA,EAAD,CAAgBC,UAAW3D,KACzB,yBAAKC,UAAU,uBACb,kBAAC,IAAD,CAAaxB,MAAM,YACnB,kBAACyB,EAAA,EAAD,CAAYD,UAAWpB,EAAQP,YAA/B,kBACA,yBAAK2B,UAAU,6BAA4B,kBAAC,IAAD,CAAoBxB,MAAM,cAEvE,kBAAC0B,EAAA,EAAD,MAEA,kBAACyD,EAAA,EAAD,CAAO3D,UAAWpB,EAAQsE,MAAOU,KAAK,SACpC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,eACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,EAAA,EAAD,KACG/H,EAAKK,WAAW2H,KACf,SAACC,GAAD,OACE,kBAACL,EAAA,EAAD,CAAUnD,QAAS,kBAnCR7D,EAmC8BqH,EAAI3H,GAlCzDiB,EAASqD,EAA6BhE,SACtCsG,GAAQ,GAFc,IAACtG,GAmCuCsH,OAAK,EAACC,IAAKF,EAAI3H,IAC/D,kBAACuH,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,OAC7B,IACAH,EAAI3H,GACJ,KAGH,kBAACuH,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,OAC7B,IACAH,EAAI1H,KACJ,KAEH,kBAACsH,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,OAC7B,IACAH,EAAIzH,YACJ,KAEH,kBAACqH,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,OAC7B,IACAH,EAAIxH,MACJ,YASf,kBAAC,GAAD,CACEiF,QArEc,WAClBwB,GAAQ,IAqEJxG,aAAcV,EAAKU,aACnBwF,KAAMA,MC/FRpE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJoG,SAAU,GAEZC,WAAY,CACVC,YAAavG,EAAMK,QAAQ,IAE7BmG,MAAM,aACJH,SAAU,EACVI,QAAS,QACRzG,EAAM0G,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACL3D,SAAU,WACV4D,aAAc7G,EAAM8G,MAAMD,aAC1BE,gBAAiBC,YAAKhH,EAAMoD,QAAQ6D,OAAOC,MAAO,KAClD,UAAW,CACTH,gBAAiBC,YAAKhH,EAAMoD,QAAQ6D,OAAOC,MAAO,MAEpD9G,WAAY,EACZF,MAAO,QACNF,EAAM0G,YAAYC,GAAG,MAAQ,CAC5BvG,WAAYJ,EAAMK,QAAQ,GAC1BH,MAAO,SAGXiH,WAAY,CACVpE,QAAS/C,EAAMK,QAAQ,EAAG,GAC1B+G,OAAQ,OACRnE,SAAU,WACVoE,cAAe,OACfZ,QAAS,OACTa,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTlH,MAAO,WAETmH,WAAW,aACT1E,QAAS/C,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCqH,YAAY,cAAD,OAAgB1H,EAAMK,QAAQ,GAA9B,OACXsH,WAAY3H,EAAM4H,YAAYC,OAAO,SACrC3H,MAAO,QACNF,EAAM0G,YAAYC,GAAG,MAAQ,CAC5BzG,MAAO,OACP,UAAW,CACTA,MAAO,cAoCA4H,GA9BG,WAChB,IAAMpH,EAAUZ,KAChB,OACE,yBAAKgC,UAAWpB,EAAQT,MACtB,kBAAC8H,EAAA,EAAD,CAAQ9E,SAAS,UACf,kBAAC+E,EAAA,EAAD,KACE,kBAAC,IAAD,MACA,yBAAKC,IAAI,yCAAyCnG,UAAU,OAAOoG,IAAI,SAEvE,yBAAKpG,UAAWpB,EAAQkG,QACtB,yBAAK9E,UAAWpB,EAAQyG,YACtB,kBAAC,IAAD,OAEF,kBAACgB,EAAA,EAAD,CACEC,YAAY,eACZ1H,QAAS,CACPT,KAAMS,EAAQ8G,UACda,MAAO3H,EAAQ+G,YAEjBa,WAAY,CAAE,aAAc,eAKpC,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,2BCxESC,GAhBO,WAA2B,IAA1BlD,EAAyB,uDAAjBrH,EAAMwK,EAAW,uCAC9C,OAAQA,EAAO/I,MACb,ILFkC,yBKGhC,OAAO,6BAAK4F,GAAUmD,EAAOxK,MAC/B,ILF6B,oBKG3B,OAAO,6BAAKqH,GAAZ,IAAmB1G,WAAW,IAChC,ILHqC,4BKInC,OAAO,0CACF0G,GACAmD,EAAOxK,MAFZ,IAGEW,WAAW,IAEf,QACE,OAAO0G,ICVEoD,GAHKC,aAAgB,CAClCpD,YCEF,IAAMqD,GCDS,SAAwBC,GAErC,IAAMC,EAAmBC,OAAOC,sCAAwCC,KACxE,OAAOC,aAAYR,GAAaG,EAAcC,EAAiBK,aAAgBC,QDFnEC,GAWCC,GATH,kBACV,kBAAC,IAAD,CAAeV,MAAOA,IACpB,6BACE,kBAAC,GAAD,SECcW,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjL,MAAK,SAAAkL,GACJA,EAAaC,gBAEdlL,OAAM,SAAAf,GACLL,QAAQK,MAAMA,EAAMkM,a","file":"static/js/main.c2442060.chunk.js","sourcesContent":["export async function handleResponse(response) {\r\n  console.log('-------handleResponse---------');\r\n  if (response.status === 200) {\r\n    // console.log(response.data);\r\n    return response.data;\r\n  }\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error('Network response was not ok.');\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(`API call failed. ${error}`);\r\n  throw error;\r\n}\r\n","const data = {\n  quoteItems: [\n    {\n      id: '111116',\n      name: 'Alice',\n      destination: 'New York',\n      price: '1000',\n    },\n    {\n      id: '111115',\n      name: 'Bob',\n      destination: 'New York',\n      price: '1000',\n    },\n    {\n      id: '666666',\n      name: 'Bob',\n      destination: 'New York',\n      price: '1000',\n    },\n    {\n      id: '111119',\n      name: 'Harry Potter',\n      destination: 'Mumbai',\n      price: '1000',\n    },\n    {\n      id: '222220',\n      name: 'Harry Potter',\n      destination: 'Mumbai',\n      price: '1000',\n    },\n    {\n      id: '222221',\n      name: 'Harry Potter',\n      destination: 'Mumbai',\n      price: '1000',\n    },\n    {\n      id: '000000',\n      name: 'Ron Weasley',\n      destination: 'Paris',\n      price: '1000',\n    },\n    {\n      id: '111117',\n      name: 'Luke  Skywalker',\n      destination: 'Toronto',\n      price: '1000',\n    },\n    {\n      id: '111118',\n      name: 'Luke  Skywalker',\n      destination: 'Toronto',\n      price: '1000',\n    },\n  ],\n  quoteDetails: {\n\n  },\n  isLoading: false,\n};\nexport default data;\n","/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport { handleError, handleResponse } from './apiUtils';\nimport data from '../initialData';\n\nexport async function getData() {\n  // console.log('-------WebApi GET QUOTES--------');\n  // const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote/';\n\n  // const url = `${baseUrl}`;\n\n  // return axios.get(url)\n  //   .then(handleResponse)\n  //   .catch(handleError);\n\n  return data;\n}\n\nexport async function getDetails(quoteId) {\n  console.log('-------WebApi GET QUOTES--------');\n  const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote';\n  const url = `${baseUrl}/${quoteId}`;\n\n  return axios.get(url)\n    .then(handleResponse)\n    .catch(handleError);\n\n  // return data;\n}\n\nexport async function postApi(payload) {\n  console.log('-------WebApi Post QUOTES--------');\n  const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote';\n  const url = `${baseUrl}/`;\n\n  return axios.post(url, JSON.stringify(payload))\n    .then(handleResponse)\n    .catch(handleError);\n\n  // return data;\n}\n","/* eslint-disable func-names */\n/* eslint-disable import/prefer-default-export */\nimport * as types from './actionTypes';\nimport * as dataApi from '../../api/dataAPIUtil';\n\nexport function getQuotes() {\n  return { type: types.GET_QUOTES };\n}\nexport function getQuoteListSuccess(data) {\n  return { type: types.GET_QUOTE_LIST_SUCCESS, data };\n}\nexport function getDetails() {\n  return { type: types.GET_QUOTE_DETAILS };\n}\nexport function getQuoteDetailsSuccess(data) {\n  return { type: types.GET_QUOTE_DETAILS_SUCCESS, data };\n}\nexport function postQuote(payload) {\n  return { type: types.POST_QUOTE, payload };\n}\n// export function postQuoteSuccess(payload) {\n//   return { type: types.POST_QUOTE_SUCCESS, payload };\n// }\n\nexport function getQuoteList() {\n  return function (dispatch) {\n    return dataApi.getData().then((data) => {\n      dispatch(getQuoteListSuccess(data));\n    }).catch((error) => {\n      // TODO: handle Error loadDataError\n      throw error;\n    });\n  };\n}\n\nexport function getQuoteDetails(quoteId) {\n  return function (dispatch) {\n    dispatch(getDetails());\n    return dataApi.getDetails(quoteId).then((data) => {\n      dispatch(getQuoteDetailsSuccess(data));\n    }).catch((error) => {\n      // TODO: handle Error loadDataError\n      throw error;\n    });\n  };\n}\n\nexport function postQuoteApi(payload) {\n  return function (dispatch) {\n    return dataApi.postApi(payload).then(() => {\n      dispatch(getQuoteList());\n    }).catch((error) => {\n      // TODO: handle Error loadDataError\n      throw error;\n    });\n  };\n}\n","/* eslint-disable import/prefer-default-export */\n\nexport const GET_QUOTES = 'GET_QUOTES';\nexport const GET_QUOTE_LIST_SUCCESS = 'GET_QUOTE_LIST_SUCCESS';\n\nexport const GET_QUOTE_DETAILS = 'GET_QUOTE_DETAILS';\nexport const GET_QUOTE_DETAILS_SUCCESS = 'GET_QUOTE_DETAILS_SUCCESS';\n\nexport const POST_QUOTE = 'POST_QUOTE';\nexport const POST_QUOTE_SUCCESS = 'POST_QUOTE_SUCCESS';\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport { Typography, Button } from '@material-ui/core';\nimport FastForwardOutlinedIcon from '@material-ui/icons/FastForwardOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport * as quoteActions from '../redux/actions/quoteActions';\nimport '../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '400px',\n  },\n  typography: {\n    marginLeft: theme.spacing(1),\n    color: '#5F6CAF',\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '20ch',\n    },\n  },\n}));\nconst QuotesForm = () => {\n  const classes = useStyles();\n  const [from, setFrom] = useState('');\n  const [destination, setDestination] = useState('');\n  const [departureDate, setDepartureDate] = useState('');\n  const [returnDate, setReturnDate] = useState('');\n  const [people, setPeople] = useState('');\n  const [transportation, setTransportation] = useState('');\n  const [name, setName] = useState('');\n\n  const handleInputChange = (e) => {\n    switch (e.target.id) {\n      case 'from':\n        setFrom(e.target.value);\n        break;\n      case 'destination':\n        setDestination(e.target.value);\n        break;\n      case 'departureDate':\n        setDepartureDate(e.target.value);\n        break;\n      case 'returnDate':\n        setReturnDate(e.target.value);\n        break;\n      case 'people':\n        setPeople(e.target.value);\n        break;\n      case 'transportation':\n        setTransportation(e.target.value);\n        break;\n      case 'name':\n        setName(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const dispatch = useDispatch();\n  const handleFormSubmit = () => {\n    // erreor handelings\n    const payload = {\n      quoteId: nanoid(6),\n      from,\n      destination,\n      departDate: departureDate,\n      returnDate,\n      people,\n      transportation,\n      name,\n    };\n    dispatch(quoteActions.postQuoteApi(payload));\n  };\n\n  return (\n  // <div className={classes.root}>\n    <Paper className={classes.root}>\n      <div className=\"pending-card-header\">\n        <FastForwardOutlinedIcon color=\"primary\" />\n        <Typography className={classes.typography}>Quick quote</Typography>\n        <div className=\"pending-card-header-right\"><ReplayOutlinedIcon color=\"primary\" /></div>\n      </div>\n      <Divider />\n      <form className={classes.form} autoComplete=\"off\">\n        <TextField\n          id=\"from\"\n          label=\"FROM\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={from}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"destination\"\n          label=\"DESTINATION\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={destination}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"departureDate\"\n          label=\"DEPARTURE DATE\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={departureDate}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"returnDate\"\n          label=\"RETURN DATE\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={returnDate}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"people\"\n          label=\"PEOPLE\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={people}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"transportation\"\n          label=\"TRANSPORTATION\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={transportation}\n          onChange={handleInputChange}\n        />\n        <TextField\n          id=\"name\"\n          label=\"NAME\"\n          type=\"text\"\n          variant=\"filled\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={name}\n          onChange={handleInputChange}\n        />\n        <Button onClick={handleFormSubmit}>Create a quote</Button>\n      </form>\n\n    </Paper>\n  // </div>\n  );\n};\n\nexport default QuotesForm;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  tablecell: {\n    fontSize: '40pt',\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const {\n    children, classes, onClose, ...other\n  } = props;\n\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst QuoteDetailsModal = (props) => {\n  const {\n    onClose, open, quoteDetails,\n  } = props;\n\n  return (\n\n    <Dialog onClose={onClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\n        Quote Details\n      </DialogTitle>\n      <DialogContent dividers>\n\n        <Typography gutterBottom>\n          Quoteid:\n          {' '}\n          {quoteDetails.quote_id}\n          <br />\n          Name:\n          {' '}\n          {quoteDetails.name}\n          <br />\n          Phone Number:\n          {' '}\n          {quoteDetails.phone}\n          <br />\n          Address:\n          {' '}\n          {quoteDetails.address}\n          <br />\n          Email:\n          {' '}\n          {quoteDetails.email}\n          <br />\n          Transportation\n          {' '}\n          {quoteDetails.transportation}\n          <br />\n          Depatrute Location:\n          {' '}\n          {' '}\n          {quoteDetails.depatrute_location}\n          <br />\n          Destination Location:\n          {' '}\n          {' '}\n          {quoteDetails.destination_location}\n          <br />\n          Departure Date:\n          {' '}\n          {quoteDetails.departure_date}\n          <br />\n          Return Date\n          {' '}\n          {quoteDetails.return_date}\n          <br />\n          Number of Travellers:\n          {' '}\n          {quoteDetails.number_of_travellers}\n          <br />\n          Price:\n          {' '}\n          {quoteDetails.price}\n          <br />\n        </Typography>\n\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default QuoteDetailsModal;\n\nQuoteDetailsModal.propTypes = {\n  quoteDetails: PropTypes.objectOf(PropTypes.any).isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport * as quoteActions from '../redux/actions/quoteActions';\nimport '../App.css';\nimport QuoteDetailsModal from './QuoteDetailsModal';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: '400px',\n    // backgroundColor: 'pink',\n  },\n  typography: {\n    marginLeft: theme.spacing(1),\n    color: '#5F6CAF',\n  },\n}));\n\nconst QuoteList = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickOpen = (quoteId) => {\n    dispatch(quoteActions.getQuoteDetails(quoteId));\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    dispatch(quoteActions.getQuoteList());\n  }, []);\n\n  const data = useSelector((state) => state.quotes);\n  // console.log(data.quoteItems);\n\n  return (\n    <div>\n\n      <TableContainer component={Paper}>\n        <div className=\"pending-card-header\">\n          <RestoreIcon color=\"primary\" />\n          <Typography className={classes.typography}>Pending Quotes</Typography>\n          <div className=\"pending-card-header-right\"><ReplayOutlinedIcon color=\"primary\" /></div>\n        </div>\n        <Divider />\n\n        <Table className={classes.table} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">ID #</TableCell>\n              <TableCell align=\"center\">NAME</TableCell>\n              <TableCell align=\"center\">DESTINATION</TableCell>\n              <TableCell align=\"center\">PRICE</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.quoteItems.map(\n              (row) => (\n                <TableRow onClick={() => handleClickOpen(row.id)} hover key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {' '}\n                    {row.id}\n                    {' '}\n                  </TableCell>\n\n                  <TableCell component=\"th\" scope=\"row\">\n                    {' '}\n                    {row.name}\n                    {' '}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {' '}\n                    {row.destination}\n                    {' '}\n                  </TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {' '}\n                    {row.price}\n                    {' '}\n                  </TableCell>\n                </TableRow>\n              ),\n            )}\n          </TableBody>\n\n        </Table>\n      </TableContainer>\n      <QuoteDetailsModal\n        onClose={handleClose}\n        quoteDetails={data.quoteDetails}\n        open={open}\n      />\n    </div>\n\n  );\n};\n\nexport default QuoteList;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport QuotesForm from './QuotesForm';\nimport QuoteList from './QuoteList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <DashboardIcon />\n          <img src=\"wetbat_logo_white-removebg-preview.png\" className=\"logo\" alt=\"logo\" />\n\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <QuotesForm />\n      <QuoteList />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as types from '../actions/actionTypes';\nimport data from '../../initialData';\n\nconst quotesReducer = (state = data, action) => {\n  switch (action.type) {\n    case types.GET_QUOTE_LIST_SUCCESS:\n      return { ...state, ...action.data };\n    case types.GET_QUOTE_DETAILS:\n      return { ...state, isLoading: true };\n    case types.GET_QUOTE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        ...action.data,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\nexport default quotesReducer;\n","import { combineReducers } from 'redux';\r\nimport quotes from './quotesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  quotes,\r\n});\r\nexport default rootReducer;\r\n","import React from 'react';\nimport './App.css';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport Dashboard from './components/Dashboard';\nimport configureStore from './redux/store/configureStore';\n\nconst store = configureStore();\n\nconst App = () => (\n  <ReduxProvider store={store}>\n    <div>\n      <Dashboard />\n    </div>\n  </ReduxProvider>\n\n);\n\nexport default App;\n","/* eslint-disable no-underscore-dangle */\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n  // add support for rexux devtools\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}