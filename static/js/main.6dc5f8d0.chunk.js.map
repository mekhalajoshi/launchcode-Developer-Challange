{"version":3,"sources":["api/apiUtils.js","api/dataAPIUtil.js","redux/actions/quoteActions.js","redux/actions/actionTypes.js","components/QuotesForm.jsx","components/QuoteDetailsModal.jsx","components/QuoteList.jsx","components/Dashboard.jsx","initialData.js","redux/reducers/quotesReducer.js","redux/reducers/index.js","App.jsx","redux/store/configureStore.js","serviceWorker.js","index.js"],"names":["handleResponse","response","a","console","log","status","data","text","error","Error","handleError","url","axios","get","then","catch","quoteId","payload","post","JSON","stringify","getQuoteList","dispatch","dataApi","type","getQuoteListSuccess","getQuoteDetails","getQuoteDetailsSuccess","postQuoteApi","useStyles","makeStyles","theme","root","width","typography","marginLeft","spacing","color","form","margin","Alert","props","elevation","variant","QuotesForm","classes","useSelector","state","quotes","useDispatch","useState","from","setFrom","destination","setDestination","Date","departureDate","setDepartureDate","returnDate","setReturnDate","people","setPeople","transportation","setTransportation","name","setName","handleInputChange","e","target","value","React","open","setOpen","handleClose","event","reason","locationsMap","label","Paper","className","Typography","Divider","autoComplete","TextField","required","id","select","onChange","InputLabelProps","shrink","map","option","MenuItem","key","utils","DateFnsUtils","format","inputVariant","date","disablePast","KeyboardButtonProps","Button","onClick","nanoid","departDate","quoteActions","Snackbar","autoHideDuration","onClose","severity","apiResponseStatus","DialogTitle","withStyles","padding","closeButton","position","right","top","palette","grey","tablecell","fontSize","children","other","disableTypography","IconButton","aria-label","DialogContent","MuiDialogContent","QuoteDetailsModal","quoteDetails","Dialog","aria-labelledby","dividers","gutterBottom","quote_id","phone","address","email","depatrute_location","destination_location","departure_date","return_date","number_of_travellers","price","table","QuoteList","useEffect","TableContainer","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","quoteItems","row","hover","scope","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Dashboard","AppBar","Toolbar","src","alt","InputBase","placeholder","input","inputProps","isLoading","quotesReducer","action","rootReducer","combineReducers","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","configureStore","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"ihBAAO,SAAeA,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAC,EAAA,yDACLC,QAAQC,IAAI,kCACY,MAApBH,EAASI,OAFR,yCAIIJ,EAASK,MAJb,UAMmB,MAApBL,EAASI,OANR,gCASiBJ,EAASM,OAT1B,aASGC,EATH,OAUG,IAAIC,MAAMD,GAVb,aAYC,IAAIC,MAAM,gCAZX,4C,sBAgBA,SAASC,EAAYF,GAG1B,MADAL,QAAQK,MAAR,2BAAkCA,IAC5BA,E,4CCdD,4BAAAN,EAAA,6DACLC,QAAQC,IAAI,oCACI,qEAEVO,EAJD,UAEW,sEAFX,kBAMEC,IAAMC,IAAIF,GACdG,KAAKd,GACLe,MAAML,IARJ,4C,kEAaA,WAA0BM,GAA1B,eAAAd,EAAA,6DACLC,QAAQC,IAAI,oCACI,oEACVO,EAHD,UAEW,oEAFX,YAGqBK,GAHrB,kBAKEJ,IAAMC,IAAIF,GACdG,KAAKd,GACLe,MAAML,IAPJ,4C,kEAYA,WAAuBO,GAAvB,eAAAf,EAAA,6DACLC,QAAQC,IAAI,qCACI,oEACVO,EAHD,UAEW,oEAFX,uBAKEC,IAAMM,KAAKP,EAAKQ,KAAKC,UAAUH,IACnCH,KAAKd,GACLe,MAAML,IAPJ,4C,sBCNA,SAASW,IACd,OAAO,SAAUC,GACf,ODrBG,WAAP,+BCqBWC,GAAkBT,MAAK,SAACR,GAC7BgB,EAnBC,SAA6BhB,GAClC,MAAO,CAAEkB,KCN2B,yBDMSlB,QAkBhCmB,CAAoBnB,OAC5BS,OAAM,SAACP,GAER,MAAMA,MAKL,SAASkB,EAAgBV,GAC9B,OAAO,SAAUM,GAEf,OADAA,EAzBK,CAAEE,KCPsB,sBFa1B,SAAP,kCCoBWD,CAAmBP,GAASF,MAAK,SAACR,GACvCgB,EAzBC,SAAgChB,GACrC,MAAO,CAAEkB,KCT8B,4BDSSlB,QAwBnCqB,CAAuBrB,OAC/BS,OAAM,SAACP,GAER,MAAMA,MAKL,SAASoB,EAAaX,GAC3B,OAAO,SAAUK,GACf,ODnBG,SAAP,kCCmBWC,CAAgBN,GAASH,MAAK,WACnCQ,EAASD,QACRN,OAAM,SAACP,GAER,MAAMA,ME9BZ,IAAMqB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,SAETC,WAAY,CACVC,WAAYJ,EAAMK,QAAQ,GAC1BC,MAAO,WAETC,KAAM,CACJ,uBAAwB,CACtBC,OAAQR,EAAMK,QAAQ,GACtBH,MAAO,aA6Sb,SAASO,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGvCG,MA5SI,WACjB,IAAMC,EAAUhB,IACVvB,EAAOwC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UACpC1B,EAAW2B,cAHM,EAKCC,mBAAS,IALV,mBAKhBC,EALgB,KAKVC,EALU,OAMeF,mBAAS,IANxB,mBAMhBG,EANgB,KAMHC,EANG,OAOmBJ,mBAAS,IAAIK,MAPhC,mBAOhBC,EAPgB,KAODC,EAPC,OAQaP,mBAAS,IAAIK,MAR1B,mBAQhBG,EARgB,KAQJC,EARI,OASKT,mBAAS,IATd,mBAShBU,EATgB,KASRC,EATQ,OAUqBX,mBAAS,IAV9B,mBAUhBY,EAVgB,KAUAC,EAVA,OAWCb,mBAAS,IAXV,mBAWhBc,EAXgB,KAWVC,EAXU,KAajBC,EAAoB,SAACC,GACzB,OAAQA,EAAEC,OAAOJ,MACf,IAAK,OACHZ,EAAQe,EAAEC,OAAOC,OACjB,MACF,IAAK,cACHf,EAAea,EAAEC,OAAOC,OACxB,MACF,IAAK,SACHR,EAAUM,EAAEC,OAAOC,OACnB,MACF,IAAK,iBACHN,EAAkBI,EAAEC,OAAOC,OAC3B,MACF,IAAK,OACHJ,EAAQE,EAAEC,OAAOC,SA5BA,EA4CCC,IAAMpB,UAAS,GA5ChB,mBA4ChBqB,GA5CgB,KA4CVC,GA5CU,KA8CjBC,GAAc,SAACC,EAAOC,GAC1BrD,EFjEK,CAAEE,KCV8B,8BC6EtB,cAAXmD,GAGJH,IAAQ,IAwEJI,GAAe,CACnB,CACEP,MAAO,SACPQ,MAAO,UAET,CACER,MAAO,QACPQ,MAAO,SAET,CACER,MAAO,WACPQ,MAAO,YACN,CACDR,MAAO,UACPQ,MAAO,WACN,CACDR,MAAO,SACPQ,MAAO,UACN,CACDR,MAAO,UACPQ,MAAO,YAGX,OACE,kBAACC,EAAA,EAAD,CAAOC,UAAWlC,EAAQb,MACxB,yBAAK+C,UAAU,uBACb,kBAAC,IAAD,CAAyB1C,MAAM,YAC/B,kBAAC2C,EAAA,EAAD,CAAYD,UAAWlC,EAAQX,YAA/B,eACA,yBAAK6C,UAAU,6BAA4B,kBAAC,IAAD,CAAoB1C,MAAM,cAEvE,kBAAC4C,EAAA,EAAD,MACA,0BAAMF,UAAWlC,EAAQP,KAAM4C,aAAa,OAC1C,yBAAKH,UAAU,wBAEb,kBAACI,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,OACHrB,KAAK,OACLa,MAAM,OACNrD,KAAK,OACL8D,QAAM,EACN3C,QAAQ,SACR0B,MAAOlB,EACPoC,SAAUrB,EACVsB,gBAAiB,CACfC,QAAQ,IAGTb,GAAac,KAAI,SAACC,GAAD,OAChB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOd,WAKd,kBAACM,EAAA,EAAD,CACEC,UAAQ,EACRpB,KAAK,cACLqB,GAAG,cACHR,MAAM,cACNrD,KAAK,OACL8D,QAAM,EACN3C,QAAQ,SACR0B,MAAOhB,EACPkC,SAAUrB,EACVsB,gBAAiB,CACfC,QAAQ,IAGTb,GAAac,KAAI,SAACC,GAAD,OAChB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOd,WAKd,kBAAC,IAAD,CAAyBiB,MAAOC,KAC9B,kBAAC,IAAD,CACExD,OAAO,SACP8C,GAAG,qBACHR,MAAM,qBACNmB,OAAO,aACP3B,MAAOb,EACPyC,aAAa,SACbV,SA7KsB,SAACW,GACjCzC,EAAiByC,IA6KPC,YAAY,OACZC,oBAAqB,CACnB,aAAc,iBAGlB,kBAAC,IAAD,CACE7D,OAAO,SACP8C,GAAG,qBACHR,MAAM,qBACNmB,OAAO,aACPG,YAAY,OACZ9B,MAAOX,EACPuC,aAAa,SACbV,SAvLmB,SAACW,GAC9BvC,EAAcuC,IAuLJE,oBAAqB,CACnB,aAAc,kBAKpB,kBAACjB,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,SACHrB,KAAK,SACLa,MAAM,SACNrD,KAAK,OACLmB,QAAQ,SACR6C,gBAAiB,CACfC,QAAQ,GAEVpB,MAAOT,EACP2B,SAAUrB,IAEZ,kBAACiB,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,iBACHR,MAAM,iBACNb,KAAK,iBACLxC,KAAK,OACL8D,QAAM,EACN3C,QAAQ,SACR0B,MAAOP,EACPyB,SAAUrB,EACVsB,gBAAiB,CACfC,QAAQ,IAhJM,CACxB,CACEpB,MAAO,aACPQ,MAAO,cAET,CACER,MAAO,OACPQ,MAAO,QAET,CACER,MAAO,OACPQ,MAAO,SAwIkBa,KAAI,SAACC,GAAD,OACrB,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOd,WAKd,kBAACM,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,OACHR,MAAM,OACNb,KAAK,OACLxC,KAAK,OACL8D,QAAM,EACN3C,QAAQ,SACR0B,MAAOL,EACPuB,SAAUrB,EACVsB,gBAAiB,CACfC,QAAQ,IAjMN,CACZ,CACEpB,MAAO,QACPQ,MAAO,SAET,CACER,MAAO,MACPQ,MAAO,OAET,CACER,MAAO,UACPQ,MAAO,WAET,CACER,MAAO,eACPQ,MAAO,gBAET,CACER,MAAO,cACPQ,MAAO,eAET,CACER,MAAO,kBACPQ,MAAO,mBA6KMa,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOd,WAKd,kBAACwB,EAAA,EAAD,CAAQ1D,QAAQ,YAAYN,MAAM,UAAUiE,QA3N3B,WAEvB,IAAMrF,EAAU,CACdD,QAASuF,YAAO,GAChBpD,OACAE,cACAmD,WAAYhD,EACZE,aACAE,SACAE,iBACAE,QAEF1C,EAASmF,EAA0BxF,IAAUH,MAAK,kBAAM0D,IAAQ,MArBhEP,EAAQ,IACRF,EAAkB,IAClBF,EAAU,IACVF,EAAc,IAAIJ,MAClBE,EAAiB,IAAIF,MACrBD,EAAe,IACfF,EAAQ,MA8NF,oBAGJ,kBAACsD,EAAA,EAAD,CAAUnC,KAAMA,GAAMoC,iBAAkB,IAAMC,QAASnC,IACrD,kBAAC,EAAD,CAAOmC,QAASnC,GAAaoC,SAAUvG,EAAKwG,mBACb,YAA3BxG,EAAKwG,kBAAmC,6BAA+B,iC,2JC7S7EC,GAAcC,cAhBL,SAACjF,GAAD,MAAY,CACzBC,KAAM,CACJO,OAAQ,EACR0E,QAASlF,EAAMK,QAAQ,IAEzB8E,YAAa,CACXC,SAAU,WACVC,MAAOrF,EAAMK,QAAQ,GACrBiF,IAAKtF,EAAMK,QAAQ,GACnBC,MAAON,EAAMuF,QAAQC,KAAK,MAE5BC,UAAW,CACTC,SAAU,WAIMT,EAAmB,SAACvE,GAAW,IAE/CiF,EACEjF,EADFiF,SAAU7E,EACRJ,EADQI,QAAS+D,EACjBnE,EADiBmE,QAAYe,EAFe,aAG5ClF,EAH4C,kCAKhD,OACE,kBAAC,KAAD,eAAgBmF,mBAAiB,EAAC7C,UAAWlC,EAAQb,MAAU2F,GAC7D,kBAAC3C,EAAA,EAAD,CAAYrC,QAAQ,MAAM+E,GACzBd,EACC,kBAACiB,GAAA,EAAD,CAAYC,aAAW,QAAQ/C,UAAWlC,EAAQqE,YAAaZ,QAASM,GACtE,kBAAC,KAAD,OAEA,SAIJmB,GAAgBf,cAAW,SAACjF,GAAD,MAAY,CAC3CC,KAAM,CACJiF,QAASlF,EAAMK,QAAQ,OAFL4E,CAIlBgB,MAyEWC,GAvEW,SAACxF,GAAW,IAElCmE,EACEnE,EADFmE,QAASrC,EACP9B,EADO8B,KAAM2D,EACbzF,EADayF,aAGjB,OAEE,kBAACC,GAAA,EAAD,CAAQvB,QAASA,EAASwB,kBAAgB,0BAA0B7D,KAAMA,GACxE,kBAAC,GAAD,CAAac,GAAG,0BAA0BuB,QAASA,GAAnD,iBAGA,kBAAC,GAAD,CAAeyB,UAAQ,GAErB,kBAACrD,EAAA,EAAD,CAAYsD,cAAY,GAAxB,WAEG,IACAJ,EAAaK,SACd,6BAJF,QAMG,IACAL,EAAalE,KACd,6BARF,gBAUG,IACAkE,EAAaM,MACd,6BAZF,WAcG,IACAN,EAAaO,QACd,6BAhBF,SAkBG,IACAP,EAAaQ,MACd,6BApBF,iBAsBG,IACAR,EAAapE,eACd,6BAxBF,sBA0BG,IACA,IACAoE,EAAaS,mBACd,6BA7BF,wBA+BG,IACA,IACAT,EAAaU,qBACd,6BAlCF,kBAoCG,IACAV,EAAaW,eACd,6BAtCF,cAwCG,IACAX,EAAaY,YACd,6BA1CF,wBA4CG,IACAZ,EAAaa,qBACd,6BA9CF,SAgDG,IACAb,EAAac,MACd,iCC7FJnH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkH,MAAO,CACLhH,MAAO,SAETC,WAAY,CACVC,WAAYJ,EAAMK,QAAQ,GAC1BC,MAAO,eAsFI6G,GAlFG,WAAO,IAAD,EACEhG,oBAAS,GADX,mBACfqB,EADe,KACTC,EADS,KAEhBlD,EAAW2B,cACXJ,EAAUhB,KAWhBsH,qBAAU,WACR7H,EAASmF,OACR,IAEH,IAAMnG,EAAOwC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAE1C,OACE,6BAEE,kBAACoG,GAAA,EAAD,CAAgBC,UAAWvE,KACzB,yBAAKC,UAAU,uBACb,kBAAC,IAAD,CAAa1C,MAAM,YACnB,kBAAC2C,EAAA,EAAD,CAAYD,UAAWlC,EAAQX,YAA/B,kBACA,yBAAK6C,UAAU,6BAA4B,kBAAC,IAAD,CAAoB1C,MAAM,cAEvE,kBAAC4C,EAAA,EAAD,MAEA,kBAACqE,GAAA,EAAD,CAAOvE,UAAWlC,EAAQoG,MAAOM,KAAK,SACpC,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,QACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,eACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,WAGJ,kBAACC,GAAA,EAAD,KACGtJ,EAAKuJ,WAAWnE,KACf,SAACoE,GAAD,OACE,kBAACL,GAAA,EAAD,CAAUnD,QAAS,kBAlCRtF,EAkC8B8I,EAAIzE,GAjCzD/D,EAASmF,EAA6BzF,SACtCwD,GAAQ,GAFc,IAACxD,GAkCuC+I,OAAK,EAAClE,IAAKiE,EAAIzE,IAC/D,kBAACqE,GAAA,EAAD,CAAWL,UAAU,KAAKW,MAAM,OAC7B,IACAF,EAAIzE,GACJ,KAGH,kBAACqE,GAAA,EAAD,CAAWL,UAAU,KAAKW,MAAM,OAC7B,IACAF,EAAI9F,KACJ,KAEH,kBAAC0F,GAAA,EAAD,CAAWL,UAAU,KAAKW,MAAM,OAC7B,IACAF,EAAIzG,YACJ,KAEH,kBAACqG,GAAA,EAAD,CAAWL,UAAU,KAAKW,MAAM,OAC7B,IACAF,EAAId,MACJ,YASf,kBAAC,GAAD,CACEpC,QApEc,WAClBpC,GAAQ,IAoEJ0D,aAAc5H,EAAK4H,aACnB3D,KAAMA,MC9FR1C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJiI,SAAU,GAEZC,WAAY,CACVC,YAAapI,EAAMK,QAAQ,IAE7BgI,MAAM,aACJH,SAAU,EACVI,QAAS,QACRtI,EAAMuI,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLrD,SAAU,WACVsD,aAAc1I,EAAM2I,MAAMD,aAC1BE,gBAAiBC,YAAK7I,EAAMuF,QAAQuD,OAAOC,MAAO,KAClD,UAAW,CACTH,gBAAiBC,YAAK7I,EAAMuF,QAAQuD,OAAOC,MAAO,MAEpD3I,WAAYJ,EAAMK,QAAQ,GAC1BH,MAAO,QACNF,EAAMuI,YAAYC,GAAG,MAAQ,CAC5BpI,WAAYJ,EAAMK,QAAQ,GAC1BH,MAAO,SAGX8I,WAAY,CACV9D,QAASlF,EAAMK,QAAQ,EAAG,GAC1B4I,OAAQ,OACR7D,SAAU,WACV8D,cAAe,OACfZ,QAAS,OACTa,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACT/I,MAAO,WAETgJ,WAAW,aACTpE,QAASlF,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCkJ,YAAY,cAAD,OAAgBvJ,EAAMK,QAAQ,GAA9B,OACXmJ,WAAYxJ,EAAMyJ,YAAYC,OAAO,SACrCxJ,MAAO,QACNF,EAAMuI,YAAYC,GAAG,MAAQ,CAC5BtI,MAAO,OACP,UAAW,CACTA,MAAO,cAoCAyJ,GA9BG,WAChB,IAAM7I,EAAUhB,KAChB,OACE,yBAAKkD,UAAWlC,EAAQb,MACtB,kBAAC2J,EAAA,EAAD,CAAQxE,SAAS,UACf,kBAACyE,EAAA,EAAD,KACE,kBAAC,IAAD,MACA,yBAAKC,IAAI,yCAAyC9G,UAAU,OAAO+G,IAAI,SAEvE,yBAAK/G,UAAWlC,EAAQ2H,QACtB,yBAAKzF,UAAWlC,EAAQkI,YACtB,kBAAC,IAAD,OAEF,kBAACgB,EAAA,EAAD,CACEC,YAAY,eACZnJ,QAAS,CACPb,KAAMa,EAAQuI,UACda,MAAOpJ,EAAQwI,YAEjBa,WAAY,CAAE,aAAc,eAKpC,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,2BC3BS5L,GA/DF,CACXuJ,WAAY,CACV,CACExE,GAAI,SACJrB,KAAM,QACNX,YAAa,WACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,MACNX,YAAa,WACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,MACNX,YAAa,WACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,eACNX,YAAa,SACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,eACNX,YAAa,SACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,eACNX,YAAa,SACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,cACNX,YAAa,QACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,kBACNX,YAAa,UACb2F,MAAO,QAET,CACE3D,GAAI,SACJrB,KAAM,kBACNX,YAAa,UACb2F,MAAO,SAGXd,aAAc,GAGdiE,WAAW,EACXrF,kBAAmB,ICnCNsF,GAvBO,WAA2B,IAA1BrJ,EAAyB,uDAAjBzC,GAAM+L,EAAW,uCAC9C,OAAQA,EAAO7K,MACb,INFkC,yBMGhC,OAAO,0CACFuB,GACAsJ,EAAO/L,MAFZ,IAGEwG,kBAAmB,YAEvB,INN6B,oBMO3B,OAAO,6BAAK/D,GAAZ,IAAmBoJ,WAAW,IAChC,INPqC,4BMQnC,OAAO,0CACFpJ,GACAsJ,EAAO/L,MAFZ,IAGE6L,WAAW,EACXrF,kBAAmB,YAEvB,INTqC,4BMUnC,OAAO,6BAAK/D,GAAZ,IAAmB+D,kBAAmB,KACxC,QACE,OAAO/D,ICjBEuJ,GAHKC,aAAgB,CAClCvJ,YCEF,IAAMwJ,GCDS,SAAwBC,GAErC,IAAMC,EAAmBC,OAAOC,sCAAwCC,KACxE,OAAOC,aAAYR,GAAaG,EAAcC,EAAiBK,aAAgBC,QDFnEC,GAWCC,GATH,kBACV,kBAAC,IAAD,CAAeV,MAAOA,IACpB,6BACE,kBAAC,GAAD,SECcW,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhN,MAAK,SAAAiN,GACJA,EAAaC,gBAEdjN,OAAM,SAAAP,GACLL,QAAQK,MAAMA,EAAMyN,a","file":"static/js/main.6dc5f8d0.chunk.js","sourcesContent":["export async function handleResponse(response) {\r\n  console.log('-------handleResponse---------');\r\n  if (response.status === 200) {\r\n    // console.log(response.data);\r\n    return response.data;\r\n  }\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error('Network response was not ok.');\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(`API call failed. ${error}`);\r\n  throw error;\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport axios from 'axios';\r\nimport { handleError, handleResponse } from './apiUtils';\r\n// import data from '../initialData';\r\n\r\nexport async function getData() {\r\n  console.log('-------WebApi GET QUOTES--------');\r\n  const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote/';\r\n\r\n  const url = `${baseUrl}`;\r\n\r\n  return axios.get(url)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n\r\n  // return data;\r\n}\r\n\r\nexport async function getDetails(quoteId) {\r\n  console.log('-------WebApi GET QUOTES--------');\r\n  const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote';\r\n  const url = `${baseUrl}/${quoteId}`;\r\n\r\n  return axios.get(url)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n\r\n  // return data;\r\n}\r\n\r\nexport async function postApi(payload) {\r\n  console.log('-------WebApi Post QUOTES--------');\r\n  const baseUrl = 'https://pmohxz5xki.execute-api.us-east-1.amazonaws.com/prod/quote';\r\n  const url = `${baseUrl}/`;\r\n\r\n  return axios.post(url, JSON.stringify(payload))\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n\r\n  // return data;\r\n}\r\n","/* eslint-disable func-names */\r\n/* eslint-disable import/prefer-default-export */\r\nimport * as types from './actionTypes';\r\nimport * as dataApi from '../../api/dataAPIUtil';\r\n\r\nexport function getQuotes() {\r\n  return { type: types.GET_QUOTES };\r\n}\r\nexport function getQuoteListSuccess(data) {\r\n  return { type: types.GET_QUOTE_LIST_SUCCESS, data };\r\n}\r\nexport function getDetails() {\r\n  return { type: types.GET_QUOTE_DETAILS };\r\n}\r\nexport function getQuoteDetailsSuccess(data) {\r\n  return { type: types.GET_QUOTE_DETAILS_SUCCESS, data };\r\n}\r\nexport function postQuote(payload) {\r\n  return { type: types.POST_QUOTE, payload };\r\n}\r\nexport function clearApiResponse() {\r\n  return { type: types.CLEAR_API_RESPONSE_STATUS };\r\n}\r\n\r\nexport function getQuoteList() {\r\n  return function (dispatch) {\r\n    return dataApi.getData().then((data) => {\r\n      dispatch(getQuoteListSuccess(data));\r\n    }).catch((error) => {\r\n      // TODO: handle Error loadDataError\r\n      throw error;\r\n    });\r\n  };\r\n}\r\n\r\nexport function getQuoteDetails(quoteId) {\r\n  return function (dispatch) {\r\n    dispatch(getDetails());\r\n    return dataApi.getDetails(quoteId).then((data) => {\r\n      dispatch(getQuoteDetailsSuccess(data));\r\n    }).catch((error) => {\r\n      // TODO: handle Error loadDataError\r\n      throw error;\r\n    });\r\n  };\r\n}\r\n\r\nexport function postQuoteApi(payload) {\r\n  return function (dispatch) {\r\n    return dataApi.postApi(payload).then(() => {\r\n      dispatch(getQuoteList());\r\n    }).catch((error) => {\r\n      // TODO: handle Error loadDataError\r\n      throw error;\r\n    });\r\n  };\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\n\r\nexport const GET_QUOTES = 'GET_QUOTES';\r\nexport const GET_QUOTE_LIST_SUCCESS = 'GET_QUOTE_LIST_SUCCESS';\r\n\r\nexport const GET_QUOTE_DETAILS = 'GET_QUOTE_DETAILS';\r\nexport const GET_QUOTE_DETAILS_SUCCESS = 'GET_QUOTE_DETAILS_SUCCESS';\r\n\r\nexport const POST_QUOTE = 'POST_QUOTE';\r\nexport const POST_QUOTE_SUCCESS = 'POST_QUOTE_SUCCESS';\r\n\r\nexport const CLEAR_API_RESPONSE_STATUS = 'CLEAR_API_RESPONSE_STATUS';\r\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport { Typography, Button } from '@material-ui/core';\nimport FastForwardOutlinedIcon from '@material-ui/icons/FastForwardOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport '../App.css';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as quoteActions from '../redux/actions/quoteActions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '400px',\n  },\n  typography: {\n    marginLeft: theme.spacing(1),\n    color: '#5F6CAF',\n  },\n  form: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '20ch',\n    },\n  },\n}));\n\nconst QuotesForm = () => {\n  const classes = useStyles();\n  const data = useSelector((state) => state.quotes);\n  const dispatch = useDispatch();\n\n  const [from, setFrom] = useState('');\n  const [destination, setDestination] = useState('');\n  const [departureDate, setDepartureDate] = useState(new Date());\n  const [returnDate, setReturnDate] = useState(new Date());\n  const [people, setPeople] = useState('');\n  const [transportation, setTransportation] = useState('');\n  const [name, setName] = useState('');\n\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case 'from':\n        setFrom(e.target.value);\n        break;\n      case 'destination':\n        setDestination(e.target.value);\n        break;\n      case 'people':\n        setPeople(e.target.value);\n        break;\n      case 'transportation':\n        setTransportation(e.target.value);\n        break;\n      case 'name':\n        setName(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDepartureDateChange = (date) => {\n    setDepartureDate(date);\n  };\n\n  const handleReturnDateChange = (date) => {\n    setReturnDate(date);\n  };\n\n  // Snackbar\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    dispatch(quoteActions.clearApiResponse());\n\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const clearForm = () => {\n    setName('');\n    setTransportation('');\n    setPeople('');\n    setReturnDate(new Date());\n    setDepartureDate(new Date());\n    setDestination('');\n    setFrom('');\n  };\n\n  const handleFormSubmit = () => {\n    // erreor handelings\n    const payload = {\n      quoteId: nanoid(6),\n      from,\n      destination,\n      departDate: departureDate,\n      returnDate,\n      people,\n      transportation,\n      name,\n    };\n    dispatch(quoteActions.postQuoteApi(payload)).then(() => setOpen(true));\n    clearForm();\n  };\n\n  const names = [\n    {\n      value: 'Alice',\n      label: 'Alice',\n    },\n    {\n      value: 'Bob',\n      label: 'Bob',\n    },\n    {\n      value: 'Charlie',\n      label: 'Charlie',\n    },\n    {\n      value: 'Harry Potter',\n      label: 'Harry Potter',\n    },\n    {\n      value: 'Ron Weasley',\n      label: 'Ron Weasley',\n    },\n    {\n      value: 'Luke  Skywalker',\n      label: 'Luke Skywalker',\n    },\n\n  ];\n\n  const transportationMap = [\n    {\n      value: 'rental car',\n      label: 'Rental car',\n    },\n    {\n      value: 'taxi',\n      label: 'Taxi',\n    },\n    {\n      value: 'null',\n      label: 'None',\n    },\n  ];\n\n  const locationsMap = [\n    {\n      value: 'London',\n      label: 'London',\n    },\n    {\n      value: 'Paris',\n      label: 'Paris',\n    },\n    {\n      value: 'New York',\n      label: 'New York',\n    }, {\n      value: 'Toronto',\n      label: 'Toronto',\n    }, {\n      value: 'Mumbai',\n      label: 'Mumbai',\n    }, {\n      value: 'Calgary',\n      label: 'Calgary',\n    },\n  ];\n  return (\n    <Paper className={classes.root}>\n      <div className=\"pending-card-header\">\n        <FastForwardOutlinedIcon color=\"primary\" />\n        <Typography className={classes.typography}>Quick quote</Typography>\n        <div className=\"pending-card-header-right\"><ReplayOutlinedIcon color=\"primary\" /></div>\n      </div>\n      <Divider />\n      <form className={classes.form} autoComplete=\"off\">\n        <div className=\"quote-form-container\">\n\n          <TextField\n            required\n            id=\"from\"\n            name=\"from\"\n            label=\"FROM\"\n            type=\"text\"\n            select\n            variant=\"filled\"\n            value={from}\n            onChange={handleInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            {locationsMap.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <TextField\n            required\n            name=\"destination\"\n            id=\"destination\"\n            label=\"DESTINATION\"\n            type=\"text\"\n            select\n            variant=\"filled\"\n            value={destination}\n            onChange={handleInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            {locationsMap.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Date picker dialog\"\n              format=\"yyyy-MM-dd\"\n              value={departureDate}\n              inputVariant=\"filled\"\n              onChange={handleDepartureDateChange}\n              disablePast=\"true\"\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Date picker dialog\"\n              format=\"yyyy-MM-dd\"\n              disablePast=\"true\"\n              value={returnDate}\n              inputVariant=\"filled\"\n              onChange={handleReturnDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n\n          <TextField\n            required\n            id=\"people\"\n            name=\"people\"\n            label=\"PEOPLE\"\n            type=\"text\"\n            variant=\"filled\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={people}\n            onChange={handleInputChange}\n          />\n          <TextField\n            required\n            id=\"transportation\"\n            label=\"TRANSPORTATION\"\n            name=\"transportation\"\n            type=\"text\"\n            select\n            variant=\"filled\"\n            value={transportation}\n            onChange={handleInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            {transportationMap.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <TextField\n            required\n            id=\"name\"\n            label=\"NAME\"\n            name=\"name\"\n            type=\"text\"\n            select\n            variant=\"filled\"\n            value={name}\n            onChange={handleInputChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          >\n            {names.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={handleFormSubmit}>Create a quote</Button>\n        </div>\n      </form>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={data.apiResponseStatus}>\n          {(data.apiResponseStatus === 'success') ? 'This is a success message!' : 'Oops! Something went wrong'}\n        </Alert>\n      </Snackbar>\n    </Paper>\n  );\n};\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default QuotesForm;\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  tablecell: {\r\n    fontSize: '40pt',\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const {\r\n    children, classes, onClose, ...other\r\n  } = props;\r\n\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst QuoteDetailsModal = (props) => {\r\n  const {\r\n    onClose, open, quoteDetails,\r\n  } = props;\r\n\r\n  return (\r\n\r\n    <Dialog onClose={onClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n        Quote Details\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n\r\n        <Typography gutterBottom>\r\n          Quoteid:\r\n          {' '}\r\n          {quoteDetails.quote_id}\r\n          <br />\r\n          Name:\r\n          {' '}\r\n          {quoteDetails.name}\r\n          <br />\r\n          Phone Number:\r\n          {' '}\r\n          {quoteDetails.phone}\r\n          <br />\r\n          Address:\r\n          {' '}\r\n          {quoteDetails.address}\r\n          <br />\r\n          Email:\r\n          {' '}\r\n          {quoteDetails.email}\r\n          <br />\r\n          Transportation\r\n          {' '}\r\n          {quoteDetails.transportation}\r\n          <br />\r\n          Depatrute Location:\r\n          {' '}\r\n          {' '}\r\n          {quoteDetails.depatrute_location}\r\n          <br />\r\n          Destination Location:\r\n          {' '}\r\n          {' '}\r\n          {quoteDetails.destination_location}\r\n          <br />\r\n          Departure Date:\r\n          {' '}\r\n          {quoteDetails.departure_date}\r\n          <br />\r\n          Return Date\r\n          {' '}\r\n          {quoteDetails.return_date}\r\n          <br />\r\n          Number of Travellers:\r\n          {' '}\r\n          {quoteDetails.number_of_travellers}\r\n          <br />\r\n          Price:\r\n          {' '}\r\n          {quoteDetails.price}\r\n          <br />\r\n        </Typography>\r\n\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default QuoteDetailsModal;\r\n\r\nQuoteDetailsModal.propTypes = {\r\n  quoteDetails: PropTypes.objectOf(PropTypes.any).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport ReplayOutlinedIcon from '@material-ui/icons/ReplayOutlined';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport * as quoteActions from '../redux/actions/quoteActions';\r\nimport '../App.css';\r\nimport QuoteDetailsModal from './QuoteDetailsModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    width: '400px',\r\n  },\r\n  typography: {\r\n    marginLeft: theme.spacing(1),\r\n    color: '#5F6CAF',\r\n  },\r\n}));\r\n\r\nconst QuoteList = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = (quoteId) => {\r\n    dispatch(quoteActions.getQuoteDetails(quoteId));\r\n    setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(quoteActions.getQuoteList());\r\n  }, []);\r\n\r\n  const data = useSelector((state) => state.quotes);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <div className=\"pending-card-header\">\r\n          <RestoreIcon color=\"primary\" />\r\n          <Typography className={classes.typography}>Pending Quotes</Typography>\r\n          <div className=\"pending-card-header-right\"><ReplayOutlinedIcon color=\"primary\" /></div>\r\n        </div>\r\n        <Divider />\r\n\r\n        <Table className={classes.table} size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">ID #</TableCell>\r\n              <TableCell align=\"center\">NAME</TableCell>\r\n              <TableCell align=\"center\">DESTINATION</TableCell>\r\n              <TableCell align=\"center\">PRICE</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.quoteItems.map(\r\n              (row) => (\r\n                <TableRow onClick={() => handleClickOpen(row.id)} hover key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {' '}\r\n                    {row.id}\r\n                    {' '}\r\n                  </TableCell>\r\n\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {' '}\r\n                    {row.name}\r\n                    {' '}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {' '}\r\n                    {row.destination}\r\n                    {' '}\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {' '}\r\n                    {row.price}\r\n                    {' '}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ),\r\n            )}\r\n          </TableBody>\r\n\r\n        </Table>\r\n      </TableContainer>\r\n      <QuoteDetailsModal\r\n        onClose={handleClose}\r\n        quoteDetails={data.quoteDetails}\r\n        open={open}\r\n      />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport QuotesForm from './QuotesForm';\r\nimport QuoteList from './QuoteList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: theme.spacing(2),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <DashboardIcon />\r\n          <img src=\"wetbat_logo_white-removebg-preview.png\" className=\"logo\" alt=\"logo\" />\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <QuotesForm />\r\n      <QuoteList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","const data = {\r\n  quoteItems: [\r\n    {\r\n      id: '111116',\r\n      name: 'Alice',\r\n      destination: 'New York',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '111115',\r\n      name: 'Bob',\r\n      destination: 'New York',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '666666',\r\n      name: 'Bob',\r\n      destination: 'New York',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '111119',\r\n      name: 'Harry Potter',\r\n      destination: 'Mumbai',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '222220',\r\n      name: 'Harry Potter',\r\n      destination: 'Mumbai',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '222221',\r\n      name: 'Harry Potter',\r\n      destination: 'Mumbai',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '000000',\r\n      name: 'Ron Weasley',\r\n      destination: 'Paris',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '111117',\r\n      name: 'Luke  Skywalker',\r\n      destination: 'Toronto',\r\n      price: '1000',\r\n    },\r\n    {\r\n      id: '111118',\r\n      name: 'Luke  Skywalker',\r\n      destination: 'Toronto',\r\n      price: '1000',\r\n    },\r\n  ],\r\n  quoteDetails: {\r\n\r\n  },\r\n  isLoading: false,\r\n  apiResponseStatus: '',\r\n};\r\nexport default data;\r\n","import * as types from '../actions/actionTypes';\r\nimport data from '../../initialData';\r\n\r\nconst quotesReducer = (state = data, action) => {\r\n  switch (action.type) {\r\n    case types.GET_QUOTE_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        apiResponseStatus: 'success',\r\n      };\r\n    case types.GET_QUOTE_DETAILS:\r\n      return { ...state, isLoading: true };\r\n    case types.GET_QUOTE_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isLoading: false,\r\n        apiResponseStatus: 'success',\r\n      };\r\n    case types.CLEAR_API_RESPONSE_STATUS:\r\n      return { ...state, apiResponseStatus: '' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default quotesReducer;\r\n","import { combineReducers } from 'redux';\r\nimport quotes from './quotesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  quotes,\r\n});\r\nexport default rootReducer;\r\n","import React from 'react';\nimport './App.css';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport Dashboard from './components/Dashboard';\nimport configureStore from './redux/store/configureStore';\n\nconst store = configureStore();\n\nconst App = () => (\n  <ReduxProvider store={store}>\n    <div>\n      <Dashboard />\n    </div>\n  </ReduxProvider>\n\n);\n\nexport default App;\n","/* eslint-disable no-underscore-dangle */\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n  // add support for rexux devtools\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  return createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}